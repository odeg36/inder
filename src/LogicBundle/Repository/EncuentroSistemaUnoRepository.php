<?php

namespace LogicBundle\Repository;


use Doctrine\ORM\EntityRepository;

use Entities;


/**
 * EncuentrosSistemaUnoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EncuentroSistemaUnoRepository extends \Doctrine\ORM\EntityRepository
{

    public function getNombreCompetidorUno($object,  $tipo = null)
    {

        $em = $this->getEntityManager();
        
        $evento = $object->getSistemaJuegoUno()->getEvento();

        $competidorUnoObject;

        if($evento != null )
        {

            if($evento->getCupo() == "Individual")
            {
                
                $competidorUnoObject = $em->getRepository('LogicBundle:JugadorEvento')->find($object->getCompetidorUno());

                if($tipo == null )
                {
                    if( $competidorUnoObject != null)
                    {
                        $competidorUnoObject =  $competidorUnoObject->getUsuarioJugadorEvento()  ? $competidorUnoObject->getUsuarioJugadorEvento()->getFirstname().' '.$competidorUnoObject->getUsuarioJugadorEvento()->getLastname()  : '';
                    }
                }

            }elseif( $evento->getCupo() == "Equipos")
            {
                
                $competidorUnoObject = $em->getRepository('LogicBundle:EquipoEvento')->find($object->getCompetidorUno());
            
                if($tipo == null )
                {
                    if( $competidorUnoObject != null)
                    {
                        $competidorUnoObject = $competidorUnoObject->getNombre();
                    }
                }

            }

            
        }

        return $competidorUnoObject;


    }

    public function getNombreCompetidorDos($object,  $tipo = null )
    {

        $em = $this->getEntityManager();

        $evento = $object->getSistemaJuegoUno()->getEvento();

        $competidorDosObject;

        if($evento != null )
        {

            if($evento->getCupo() == "Individual")
            {
                
                $competidorDosObject = $em->getRepository('LogicBundle:JugadorEvento')->find($object->getCompetidorDos());

                if($tipo == null )
                {
                    if( $competidorDosObject != null)
                    {
                        $competidorDosObject =  $competidorDosObject->getUsuarioJugadorEvento()  ? $competidorDosObject->getUsuarioJugadorEvento()->getFirstname().' '.$competidorDosObject->getUsuarioJugadorEvento()->getLastname()  : '';
                    }
                }

            }elseif( $evento->getCupo() == "Equipos")
            {
                
                $competidorDosObject = $em->getRepository('LogicBundle:EquipoEvento')->find($object->getCompetidorDos());
            
                if($tipo == null )
                {
                    if( $competidorDosObject != null)
                    {
                        $competidorDosObject = $competidorDosObject->getNombre();
                    }
                }

            }

            
        }

        return $competidorDosObject;
    }

     ///////////////// funcion nombres para lo que necesite ////////////////////////
    /**
     * Get competidorUnoObject
     *
     * @return int
     */
    public function getCompetidorUnoObject( $tipo = null )
    {

        $repo = $this->getEntityManager();
        //->getRepository($this::class);

//        $this->competidorUnoObject = $this->getDoctrine()->getRepository('LogicBundle:EncuentroSistemaUno')->getNombreCompetidorUno($tipo);

        return $this->competidorUnoObject;
    }

    
    
    /**
     * Get competidorDosObject
     *
     * 
     */
    public function getCompetidorDosObject( $tipo = null)
    {
        
      //  $this->competidorDosObject =  $this->getNombreCompetidorDos($tipo);
        
        return $this->competidorDosObject;
    }
    /////////////////////////////////////////


}
