{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends base_template %}

{% block title %}
    {{ "title_create"|trans({}, 'SonataAdminBundle') }}
{% endblock %}

{% block navbar_title %}
    {{ block('title') }}
{% endblock %}

{% block tab_menu %}{{ knp_menu_render(admin.sidemenu(action), {'currentClass' : 'active', 'template': sonata_admin.adminPool.getTemplate('tab_menu_template')}, 'twig') }}{% endblock %}

{% block sonata_breadcrumb %}
    <div class="hidden-xs">
        {% if _breadcrumb is not empty or action is defined %}
            <ol class="nav navbar-top-links breadcrumb">
                {% if _breadcrumb is empty %}
                    {% if action is defined %}
                        {% for menu in breadcrumbs_builder.breadcrumbs(admin, action) %}
                            {%- set translation_domain = menu.extra('translation_domain', 'messages') -%}
                            {%- set label = menu.label -%}
                            {%- if translation_domain is not same as(false) -%}
                            {%- set label = label|trans(menu.extra('translation_params', {}), translation_domain) -%}
                            {%- endif -%}

                            {% if not loop.last %}
                                <li>
                                    {% if menu.uri is not empty %}
                                        <a href="{{ menu.uri }}{{'list' in menu.uri?'?filter[oferta][value]='~oferta.id:''}}">
                                            {% if menu.extra('safe_label', true) %}
                                                {{- label|raw -}}
                                            {% else %}
                                                {{- label -}}
                                            {% endif %}
                                        </a>
                                    {% else %}
                                        <span>{{ label }}</span>
                                    {% endif %}
                                </li>
                            {% else %}
                                <li class="active"><span>{{ label }}</span></li>
                                    {% endif %}
                                {% endfor %}
                            {% endif %}
                        {% else %}
                            {{ _breadcrumb|raw }}
                        {% endif %}
            </ol>
        {% endif %}
    </div>
{% endblock sonata_breadcrumb %}
{% block form %}
    <div class="container">
        <div class="row">
            <div class="col-md-12 titulos">
                <h4>{{'titulo.preinscripcion.oferta'|trans}}</h4>
                <a class="btn btn-regresar" href="{{ admin.generateUrl('list') }}{{'?filter[oferta][value]='~oferta.id }}">
                    <i class="fa fa-arrow-circle-left" aria-hidden="true"></i>
                    {{ 'link_action_list'|trans({}, 'SonataAdminBundle') }}
                </a>
            </div>
        </div>
        <!-- InformaciÃ³n general -->
        {{form_start(form,{ attr: { novalidate:true } } )}}
        <div class="row" id="boxMargen">
            <div class="col-md-12" id="boxPadding">
                <div class="col-md-12 nuevaOferta">
                    <div class="col-sm-12 col-md-2">
                        {{ form_label(form.usuario) }}
                    </div>
                    <div class="col-sm-12 col-md-3">
                        {{ form_widget(form.tipoidentificacion, {'attr': {'class': 'form-control tipo_identificacion_' ~ form.vars.id, 'onchange': 'inder.formulario.paso3.cambiaTipoIdentificacion(this, "'~ form.vars.id ~'")'}, 'id': ''}) }}
                        {% include 'AdminBundle:CRUD:errores_campos.html.twig' with { errors : form.tipoidentificacion.vars.errors }%}
                    </div>
                    <div class="col-sm-12 col-md-4">
                        {{ form_widget(form.usuario, {attr: {class: 'numero_documento_' ~ form.vars.id, 'onchange' : 'inder.preinscripcion.usuario(this, "'~ form.vars.id ~'", '~preinscripcion.id~')' } }) }}
                        {% include 'AdminBundle:CRUD:errores_campos.html.twig' with { errors : form.usuario.vars.errors }%}
                    </div>
                    <div class="col-sm-12 col-md-3 nombre_usuario_{{ form.vars.id }}">
                        <h5 class="contenedorInfo">&nbsp;</h5>
                    </div>
                </div>
            </div>
        </div>
        {{ form_end(form) }}

        <div class="formulario_acompanate_{{ form.vars.id }}"></div>

        <div class="cargando text-center" style="display: none;">
            <i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
            <span class="sr-only">Loading...</span>
        </div>
        <span class="autocomplete_{{ form.vars.id }}" 
              data-existe="{{ path('verifica_existe_usuario_deportista_acompanante', {'tipoDocumento': form.vars.id, 'rol': rol_persona_natural}) }}" 
              data-get="{{ path('get_usuario') }}" data-registrar="{{ path('registrar_usuario') }}"></span>
        {{ sonata_block_render_event('sonata.admin.edit.form.bottom', { 'admin': admin, 'object': oferta }) }}
    {% endblock %}

    {% block javascripts %}
        {{ parent() }}

        <script type="text/javascript">
            $(document).ready(function () {
                var id = "{{ form.vars.id }}";
                var uniqId = "select_documento_" + "{{ form.vars.id }}";
                var opciones = {
                    url_list: $('.autocomplete_' + "{{ form.vars.id }}").attr('data-existe'),
                    url_get: $('.autocomplete_' + "{{ form.vars.id }}").attr('data-get'),
                    otherOptions: {
                        minimumInputLength: 1,
                        formatNoMatches: Translator.trans('formulario.autocomplete.no.usuario'),
                        formatSearching: Translator.trans('formulario.autocomplete.buscando'),
                        formatInputTooShort: Translator.trans('formulario.autocomplete.caracteres', {cantidad: 1}),
                        dropdownCssClass: uniqId
                    }
                };
                $(".numero_documento_" + "{{ form.vars.id }}").autocompleter(opciones);
            });
        </script>
    {% endblock javascripts %}
